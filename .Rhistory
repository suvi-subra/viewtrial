## Fill the DESCRIPTION ----
## Add meta data about your application
golem::fill_desc(
pkg_name = "viewTRiAL", # The Name of the package containing the App
pkg_title = "Centralized Monitoring Dashboard Template", # The Title of the package containing the App
pkg_description = "PKG_DESC.", # The Description of the package containing the App
author_first_name = "Suvitha", # Your First Name
author_last_name = "Subramaniam", # Your Last Name
author_email = "suvitha.subramaniam@usb.ch", # Your Email
repo_url = NULL # The URL of the GitHub Repo (optional)
)
## Set {golem} options ----
golem::set_golem_options()
## Create Common Files ----
## See ?usethis for more information
usethis::use_mit_license( name = "GPL v3" )  # You can set another license here
## Init Testing Infrastructure ----
## Create a template for tests
golem::use_recommended_tests()
## Use Recommended Packages ----
golem::use_recommended_deps()
## Add helper functions ----
golem::use_utils_ui()
golem::use_utils_server()
# go to dev/02_dev.R
rstudioapi::navigateToFile( "dev/02_dev.R" )
## Add modules ----
## Create a module infrastructure in R/
golem::add_module( name = "overview") # Name of the module
#' overview UI Function
#'
#' @description A shiny Module.
#'
#' @param id,input,output,session Internal parameters for {shiny}.
#'
#' @noRd
#'
#' @importFrom shiny NS tagList
mod_overview_ui <- function(id){
ns <- NS(id)
tagList(
)
}
install.packages("devtools")
## Add modules ----
## Create a module infrastructure in R/
golem::add_module( name = "overview") # Name of the module
golem::add_module( name = "recruit") # Name of the module
golem::add_module( name = "consent") # Name of the module
## Add internal datasets ----
## If you have data in your package
usethis::use_data_raw( name = "create_data", open = FALSE )
## Source to create dummy dataset
source("../create_dummy_data.R")
library(viewTRiAL)
run_app()
library(viewTRiAL)
run_app()
## Dependencies ----
## Add one line by package you want to add as dependency
usethis::use_package("dplyr")
usethis::use_package("shinydashboard")
usethis::use_package("ggplot2")
usethis::use_package("lubridate")
usethis::use_package("stringr")
usethis::use_package("magrittr")
usethis::use_package("plotly")
usethis::use_package("remotes")
usethis::use_package("secuTrialR")
library(viewTRiAL)
run_app()
library(viewTRiAL)
run_app()
## Use Recommended Packages ----
golem::use_recommended_deps()
library(viewTRiAL)
run_app()
library(viewTRiAL)
run_app()
library(viewTRiAL)
run_app()
## Dependencies ----
## Add one line by package you want to add as dependency
usethis::use_package("dplyr")
usethis::use_package("shinydashboard")
usethis::use_package("ggplot2")
usethis::use_package("lubridate")
usethis::use_package("stringr")
usethis::use_package("magrittr")
usethis::use_package("plotly")
usethis::use_package("secuTrialR")
library(viewTRiAL)
run_app()
## Vignette ----
usethis::use_vignette("viewTRiAL")
run_app()
golem::add_shinyappsio_file()
## If you want to deploy to ShinyProxy
golem::add_dockerfile_shinyproxy()
library(viewTRiAL)
run_app
library(viewTRiAL)
run_app()
?create_golem
build()
pkgbuild::build()
library(viewTRiAL)
run_app()
## Add helper functions ----
## Creates ftc_* and utils_*
golem::add_fct( "helpers" )
golem::add_utils( "helpers" )
## Add helper functions ----
golem::use_utils_ui()
golem::use_utils_server()
## Use Recommended Packages ----
golem::use_recommended_deps()
golem::use_recommended_deps()
?golem::use_recommended_deps()
## Init Testing Infrastructure ----
## Create a template for tests
golem::use_recommended_tests()
